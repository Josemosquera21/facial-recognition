{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josed\\\\Desktop\\\\facial\\\\frontend\\\\src\\\\components\\\\UpdateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport WebcamCapture from './WebcamCapture';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateUser() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const user = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.user;\n  const [formData, setFormData] = useState({\n    name: (user === null || user === void 0 ? void 0 : user.name) || '',\n    identification: (user === null || user === void 0 ? void 0 : user.identification) || '',\n    password: '',\n    photo: (user === null || user === void 0 ? void 0 : user.photo) || ''\n  });\n  const [message, setMessage] = useState('');\n  const validateName = value => {\n    return /^[A-Za-zÁáÉéÍíÓóÚúÑñ\\s]+$/.test(value);\n  };\n  const validateIdentification = value => {\n    return /^\\d{6,12}$/.test(value);\n  };\n  const validatePassword = value => {\n    if (!value) return true; // Permitir contraseña vacía para mantener la actual\n    return /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,12}$/.test(value);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateName(formData.name)) {\n      setMessage('El nombre solo debe contener letras');\n      return;\n    }\n    if (!validateIdentification(formData.identification)) {\n      setMessage('La identificación debe contener entre 6 y 12 números');\n      return;\n    }\n    if (formData.password && !validatePassword(formData.password)) {\n      setMessage('La contraseña debe tener entre 8 y 12 caracteres, incluyendo letras y números');\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:5000/api/users/${user.identification}`, formData);\n      if (response.data.success) {\n        setMessage('Usuario actualizado correctamente');\n        setTimeout(() => navigate('/'), 2000);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error actualizando usuario');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actualizar Usuario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          placeholder: \"Nombre (solo letras)\",\n          pattern: \"[A-Za-z\\xC1\\xE1\\xC9\\xE9\\xCD\\xED\\xD3\\xF3\\xDA\\xFA\\xD1\\xF1\\\\s]+\",\n          title: \"Solo se permiten letras\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"identification\",\n          value: formData.identification,\n          disabled: true,\n          placeholder: \"N\\xFAmero de Identificaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Nueva Contrase\\xF1a (dejar en blanco para mantener la actual)\",\n          pattern: \"(?=.*[A-Za-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,12}\",\n          title: \"Debe contener entre 8 y 12 caracteres, incluyendo letras y n\\xFAmeros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"webcam-container\",\n        children: /*#__PURE__*/_jsxDEV(WebcamCapture, {\n          onCapture: photo => setFormData({\n            ...formData,\n            photo\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Guardar Cambios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => navigate('/'),\n          className: \"back-button\",\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateUser, \"Uss4JRl44e82JwG3CZ1PKODWzjg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = UpdateUser;\nexport default UpdateUser;\nvar _c;\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","axios","WebcamCapture","jsxDEV","_jsxDEV","UpdateUser","_s","_location$state","location","navigate","user","state","formData","setFormData","name","identification","password","photo","message","setMessage","validateName","value","test","validateIdentification","validatePassword","handleChange","e","target","handleSubmit","preventDefault","response","put","data","success","setTimeout","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","pattern","title","required","disabled","onCapture","onClick","_c","$RefreshReg$"],"sources":["C:/Users/josed/Desktop/facial/frontend/src/components/UpdateUser.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport WebcamCapture from './WebcamCapture';\r\n\r\nfunction UpdateUser() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const user = location.state?.user;\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: user?.name || '',\r\n    identification: user?.identification || '',\r\n    password: '',\r\n    photo: user?.photo || ''\r\n  });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const validateName = (value) => {\r\n    return /^[A-Za-zÁáÉéÍíÓóÚúÑñ\\s]+$/.test(value);\r\n  };\r\n\r\n  const validateIdentification = (value) => {\r\n    return /^\\d{6,12}$/.test(value);\r\n  };\r\n\r\n  const validatePassword = (value) => {\r\n    if (!value) return true; // Permitir contraseña vacía para mantener la actual\r\n    return /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,12}$/.test(value);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateName(formData.name)) {\r\n      setMessage('El nombre solo debe contener letras');\r\n      return;\r\n    }\r\n    \r\n    if (!validateIdentification(formData.identification)) {\r\n      setMessage('La identificación debe contener entre 6 y 12 números');\r\n      return;\r\n    }\r\n    \r\n    if (formData.password && !validatePassword(formData.password)) {\r\n      setMessage('La contraseña debe tener entre 8 y 12 caracteres, incluyendo letras y números');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/users/${user.identification}`, formData);\r\n      if (response.data.success) {\r\n        setMessage('Usuario actualizado correctamente');\r\n        setTimeout(() => navigate('/'), 2000);\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.error || 'Error actualizando usuario');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Actualizar Usuario</h2>\r\n      {message && <div className=\"message\">{message}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Nombre (solo letras)\"\r\n            pattern=\"[A-Za-zÁáÉéÍíÓóÚúÑñ\\s]+\"\r\n            title=\"Solo se permiten letras\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"identification\"\r\n            value={formData.identification}\r\n            disabled\r\n            placeholder=\"Número de Identificación\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            placeholder=\"Nueva Contraseña (dejar en blanco para mantener la actual)\"\r\n            pattern=\"(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,12}\"\r\n            title=\"Debe contener entre 8 y 12 caracteres, incluyendo letras y números\"\r\n          />\r\n        </div>\r\n        <div className=\"webcam-container\">\r\n          <WebcamCapture onCapture={(photo) => setFormData({...formData, photo})} />\r\n        </div>\r\n        <div className=\"button-group\">\r\n          <button type=\"submit\">Guardar Cambios</button>\r\n          <button type=\"button\" onClick={() => navigate('/')} className=\"back-button\">\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}